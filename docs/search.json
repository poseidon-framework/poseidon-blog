[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Poseidon Blog",
    "section": "",
    "text": "Welcome to the Poseidon-Blog.\nIf you want to get back to the Poseidon Website, click here.\n\n\n\n\n\n\n\n\n  \n\n\n\n\nXerxes’s cutlery - enjoying your dinner?\n\n\n\n\n\n\n\nnews\n\n\n\n\nA new update of xerxes, more statistics and documentation\n\n\n\n\n\n\nOct 27, 2023\n\n\nStephan Schiffels\n\n\n\n\n\n\n  \n\n\n\n\nTrident’s restaurant - your order please?\n\n\n\n\n\n\n\nnews\n\n\n\n\nA new update of trident, improved semantics of forge queries\n\n\n\n\n\n\nOct 4, 2023\n\n\nStephan Schiffels\n\n\n\n\n\n\n  \n\n\n\n\nThe Poseidon poster at ISBA 2023\n\n\n\n\n\n\n\nnews\n\n\nconferences\n\n\n\n\nHere is the poster we presented at the ISBA conference in Tartu, Estonia.\n\n\n\n\n\n\nSep 24, 2023\n\n\nClemens Schmid\n\n\n\n\n\n\n  \n\n\n\n\nWelcome to the Poseidon-Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\nA new update of xerxes, more statistics and documentation\n\n\n\n\n\n\nSep 22, 2023\n\n\nStephan Schiffels\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/welcome.html",
    "href": "posts/welcome.html",
    "title": "Welcome to the Poseidon-Blog",
    "section": "",
    "text": "Welcome to the Poseidon Blog. This is a place where the core developer team posts news, tutorials, or insights about the Poseidon Ecosystem. We welcome feedback to our posts, which you can give via Mastodon and our Slack Channel.\nPoseidon has been a project developed internally at the Max Planck Institute for Evolutionary Anthropology, and is partially funded by the ERC-project MICROSCOPE.\nOur core mission is to make the growing field of archaeogenetics more [FAIR] and open, and to make data analysis of archaeogenetic data more widely and multidisciplinarily applicable. To this end, we intend to provide teaching material, make data available in standardised formats, and provide well-documented tools. Stay tuned for more development, and follow us on Mastodon and Slack."
  },
  {
    "objectID": "posts/trident_14.html",
    "href": "posts/trident_14.html",
    "title": "Trident’s restaurant - your order please?",
    "section": "",
    "text": "Image of a restaurant, by Unsplash\n\n\nToday we’re releasing a new major release for trident, our command-line tool and workhorse for working with Poseidon packages.\nIf you haven’t checked it out yet, take a look at our documentation. With trident, you can download packages from our web-server, initialise new packages, perform validations, list summaries of packages, and - most importantly - forge new packages out of existing ones. This functionality, forge is more than a merge, and more than a subset tool. It is both. Perhaps a working analogy for what it does is a restaurant. At a restaurant, you order a specific meal, but you don’t care how the ingredients have been packaged, and with which other ingredients they are stored. You just want the chefs to assmble the meal, no matter whether the beans are stored together with the peas or not.\nWith forge, you just show the program where to find the storage room (that’s what we call a base-directory that contains packages), and you tell it which individuals or groups you would like to include or exclude. Forge will then automatically look through all packages and assemble exactly the set of samples that you need in your new package.\nForge comes with a kind of mini-language to specify the ingredients that you need. This mini-language is something that we have clarified and subtly improved in this new release. There are four ways to ask forge to include entities in forge:\n\nInclude an individual by name: You can write &lt;EAS006&gt; (in angular brackets) to ask forge to look for the individual named “EAS006” (I’m glad you ask, it’s a male individual from Southern England who did 1500 years ago and was buried near a town called Eastry today.). If there are multiple versions of this individual, because there are multiple versions of packages, forge looks for this individual only on the latest version.\nInclude an individual by name, group and package: Sometimes, there are several individuals with that same name in your package collection, perhaps because you have multiple versions of the same package, or because for some reason you have already previously forged packages all in the same collection. In such a case, there is a more specific way to define an individual, via the syntax &lt;2022_Gretzinger_AngloSaxons-1.0.0:England_EMA:EAS006&gt;, which now specifies a very specific individual that is found in the given package and in the given group.\nInclude entire groups: You can write England_EMA to ask forge to look for all individuals that are associated with the group named “England_EMA” (I’m again glad you ask: EMA stands for “Early Middle Ages”). This again implicitly looks for the group only in the latest versions of packages.\nInclude entire packages: You can write *2022_Gretzinger_AngloSaxons* to ask forge to select for all individuals in the entire package.\n\nNote that you can combine these requests to merge them into the final forge. So for example you could say &lt;EAS006&gt;,&lt;EAS001&gt;,England_IronAge or so, which would then result in a package consisting of the two specified individuls plus all individuals from group “England_IronAge”. So this provides you with a lot of power already to select large numbers of samples in a succinct way. But sometimes you need even more power, because you want to also specifically exclude some samples. In forge, you can do that by prepending a minus-sign to any entity:\n\nExclude an individual by name: Write -&lt;EAS006&gt; to ask forge to remove any sample with that name from the final selection, in case it has been selected before.\nExclude an individual by name, group and package: Write -&lt;2022_Gretzinger_AngloSaxons-0.1.0:England_EMA:EAS006&gt; to not remove all individual with the name “EAS006”, but only the one in the specified package.\nExclude an entire group: Write -England_EMA to remove all individuals that belong to that group.\nExclude an entire package: Write -*2022_Gretzinger_AngloSaxons* to remove this package.\n\nSo now you can accurately describe what you want to include and exclude. Note that the order matters, as you would expect: *2022_Gretzinger_AngloSaxons*,-England_EMA,&lt;EAS006&gt; will contain a selection that includes &lt;EAS006&gt;, since it was added back at the end. In contrast, *2022_Gretzinger_AngloSaxons*,&lt;EAS006&gt;,-England_EMA will not include the sample, as the entire group was removed after it was added, so it got removed again.\nThere is one more gist: If your forge-list starts with an exclusion statement, so if you just write -*2022_Gretzinger_AngloSaxons*, then this implicitly means that you include all latest versions of packages in the base directory. So this is a way to forge everything except a given package or group or individual.\nThe exact semantics of this forge-machinery are quite complex and powerful, and we have clarified how this works in the latest version, and made it specifically more consistent and intuitive. This in particular concerns a feature that we now built in for the first time: You can now append versions of packages explicitly to a package-name, to select a specific version of a package. This works both in package requests, and in individuals by name, group and package.\nSo *2022_Gretzinger_AngloSaxons-1.2.1* works, and &lt;2022_Gretzinger_AngloSaxons-1.2.1:England_EMA:EAS006&gt; works as well.\nThere was quite a bunch of refactoring of code that needed to happen under the hood to make this update possible, in particular in relation to supporting multiple versions of packages. This update will bring us a good step closer to making archaeoenetics analyses truly reproducible, as older versions of packages will continue to be served on our servers (which we will post about separately)."
  },
  {
    "objectID": "posts/isba2023poster.html",
    "href": "posts/isba2023poster.html",
    "title": "The Poseidon poster at ISBA 2023",
    "section": "",
    "text": "The biennial meeting of the International Society for Biomolecular Archaeology (ISBA) is one of the key conferences for human archaeogenetic research. This years meeting, ISBA2023 was set to take place from 13th to 16th September in the city of Tartu in Estonia and entitled “New Horizons in Biomolecular Archaeology”. Naturally we decided to present Poseidon there to its core user group: practitioners in the field of archaeogenetics.\nWe applied with an ambitious abstract (the full text is available at the bottom of this post) and were awarded a poster. Below we share what we came up with. We tried to explain what motivates us to work on Poseidon and which components of the framework are already available. This includes the package format specification, the software tools, the public archives and the Minotaur workflow.\nThiseas C. Lamnidis and I finally presented the poster as the result of collaborative work with Ayshin Ghalichi, Dhananjaya B. A. Mudiyanselage, Wolfgang Haak and Stephan Schiffels in Tartu.\nYou can download the complete poster in .pdf format here."
  },
  {
    "objectID": "posts/isba2023poster.html#abstract",
    "href": "posts/isba2023poster.html#abstract",
    "title": "The Poseidon poster at ISBA 2023",
    "section": "Abstract",
    "text": "Abstract\nPoseidon – Powerful and FAIR archaeogenetic genotype data management\nThe increase in ancient human DNA data requires robust yet flexible solutions to store and distribute it. While raw sequencing data is generally shared in large archives (e.g. ENA or SRA), no such standard exists for derived genotype data and contextual, spatiotemporal information. This raises concrete issues:\n\nAncient individuals only constitute meaningful observations if their spatiotemporal provenience is known. Current practice renders it difficult to maintain the connection between archaeological context and sampled genomic data.\nSpecific results can only be reproduced with genotypes. Current practice does not include their publication.\nMeta-analyses involving large amounts of data require tedious curation. Available public datasets have high key-person-risk, lag behind and are not well machine-readable.\n\nTo tackle these issues we present Poseidon, a computational framework including an open data format, software, and community-maintained archives to enable standardised and FAIR handling of archaeogenetic data. A Poseidon package bundles genotypes in industry-standard formats with human- and machine-readable context data, storing sample-wise information on spatiotemporal origin and genetic data quality. Through collective effort we already prepared 100+ packages for published studies in an open online repository.\nIn our talk we want to specifically highlight two components of the framework:\n\nA computational platform to process raw sequencing data directly from archive data (e.g. ENA), with a public interface for package curators to control processing parameters. Infrastructure will be provided by MPI-EVA, with community access and continuous integration provided via GitHub.\nCommand line software for package validation, manipulation and analysis. Validating structural integrity is a core task to honour the FAIR promise. The reliable structure then allows for advanced stream processing and co-analysis of genomic and contextual information."
  },
  {
    "objectID": "posts/xerxes_10.html",
    "href": "posts/xerxes_10.html",
    "title": "Xerxes’s cutlery - enjoying your dinner?",
    "section": "",
    "text": "Image of cutlery, by Unsplash\n\n\nSo, you’ve ordered your food, now what?\nOften, we want to summarise the genetic data through summary statistics. Examples for such summary statistics are F-Statistics. Our tool xerxes fstats, which is part of the Poseidon ecosystem, provides a powerful and expressive tool to compute such summary statistics from genetic data described in Poseidon packages.\nSpecifically, you can for example reproduce the famous F4 statistics that first showed that Neandertalers, a group of close human relatives that disappeared around 45,000 years ago, interbred with modern human ancestors.\nThis is its form: F4(Chimpanzee, Neandertaler, African, European). It is defined in terms of average allele frequency correlation across a set of genetic positions.\nSo, which Chimpanzee, Neandertaler, African and European groups do we have in our datasets on our servers? Let’s find out:\n&gt; trident list --remote --groups | grep Chimp\ntrident v1.3.0.4 for poseidon v2.5.0, v2.6.0, v2.7.0, v2.7.1\nhttps://poseidon-framework.github.io\n\n[Info]    Downloading group data from server\n[Info]    Message from the Server: Greetings from the Poseidon Server, version 1.3.0.4\n| Chimp.REF                                                    | Reference_Genomes                       | 2.2.0           | 1              |\nCool, so there is a group called Chimp.REF in a package called “Reference Genomes” which looks right. What about Neandertals?\n&gt; trident list --remote --groups | grep Neanderthal\ntrident v1.3.0.4 for poseidon v2.5.0, v2.6.0, v2.7.0, v2.7.1\nhttps://poseidon-framework.github.io\n\n[Info]    Downloading group data from server\n[Info]    Message from the Server: Greetings from the Poseidon Server, version 1.3.0.4\n| Altai_Neanderthal.DG                                         | Archaic_Humans                          | 2.2.0           | 1              |\n| Altai_Neanderthal_published.DG                               | Archaic_Humans                          | 2.2.0           | 1              |\n| Chagyrskaya_Neanderthal.SG                                   | 2020_Mafessoni_Neanderthal              | 0.2.0           | 1              |\n| DenisovaNeanderthalMix.SG                                    | Archaic_Humans                          | 2.2.0           | 1              |\n| Goyet_Neanderthal.SG                                         | Archaic_Humans                          | 2.2.0           | 1              |\n| LesCottes_Neanderthal.SG                                     | Archaic_Humans                          | 2.2.0           | 1              |\n| Mezmaiskaya1_Neanderthal.SG                                  | Archaic_Humans                          | 2.2.0           | 1              |\n| Mezmaiskaya2_Neanderthal.SG                                  | Archaic_Humans                          | 2.2.0           | 1              |\n| Spy_Neanderthal.SG                                           | Archaic_Humans                          | 2.2.0           | 1              |\n| VindijaG1_Neanderthal.SG                                     | Archaic_Humans                          | 2.2.0           | 1              |\nCool, those are a lot. We’ll just go with Altai_Neanderthal.DG.\nFor the African and Europeans, you can do it similarly, but I’m just telling you that we want “Yoruba” (from Nigeria) and “French” (from, well, France).\nSo how do you get the data? Easy enough. You can just order your meal, remember? Here is the way to download the packages without even knowing which packages:\ntrident fetch -d ~/poseidon_repo -f 'Chimp.REF,Altai_Neanderthal.DG,Yoruba,French'\nThis will download the relevant packages into a repository location specified by -d. You can then just run:\nxerxes fstats -d ~/poseidon_repo --stat 'F4(Chimp.REF,Altai_Neanderthal.DG,Yoruba,French)'\nHere, -d gives the location of your package repository. This runs and outputs a bunch of stuff, and then closes with:\n.-----------.-----------.----------------------.--------.--------.---------.----------------.--------------------.------------------.-------------------.\n| Statistic |     a     |          b           |   c    |   d    | NrSites | Estimate_Total | Estimate_Jackknife | StdErr_Jackknife | Z_score_Jackknife |\n:===========:===========:======================:========:========:=========:================:====================:==================:===================:\n| F4        | Chimp.REF | Altai_Neanderthal.DG | Yoruba | French | 549812  | 1.5083e-3      | 1.5083e-3          | 1.9721e-4        | 7.648265856488313 |\n'-----------'-----------'----------------------'--------'--------'---------'----------------'--------------------'------------------'-------------------'\nThe very last number shows that this statistic is significantly positive (i.e. has a Z-score above 3), which shows that Altai_Neanderthal.DG is significantly more closely related to French than to Yoruba.\nOf course, xerxes fstats can do a lot more, and you can read about it in our documentation.\nWe have also added a detailed whitepaper now, which describes the mathematical details of the methods implemented here. For example, here is the table of listed statistics from the whitepaper:\n\n\n\nA table of F-Statistics\n\n\nF-Statistics are one important analysis tool used in the field, but there are of course a lot more, and we hope to implement some more in xerxes in the future."
  }
]